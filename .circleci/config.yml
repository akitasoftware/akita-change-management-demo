# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.13

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: /go/src/github.com/akitasoftware/akita-change-management-demo
    steps:
      - checkout
      - setup_remote_docker
      
      - run:
          name: Get Akita SuperLearn
          command: docker pull akitasoftware/cli:latest
      
      - run:
          name: Run Akita SuperLearn
          command: | 
                  docker run --rm -d \
                        --env CI="${CI}" \
                        --env CIRCLECI="${CIRCLECI}" \
                        --env CIRCLE_REPOSITORY_URL="${CIRCLE_REPOSITORY_URL}" \
                        --env CIRCLE_BRANCH="${CIRCLE_BRANCH}" \
                        --env CIRCLE_SHA1="${CIRCLE_SHA1}" \
                        --env CIRCLE_PULL_REQUEST="${CIRCLE_PULL_REQUEST}" \
                        --env CIRCLE_BUILD_URL="${CIRCLE_BUILD_URL}" \
                        --env AKITA_API_KEY_ID=${AKITA_API_KEY_ID} \
                        --env AKITA_API_KEY_SECRET=${AKITA_API_KEY_SECRET} \
                        --net {NET} \
                        --name akita \
                        akitasoftware/cli:latest learn \
                        --service {SERVICE} \
                        --port {PORT}
          background: true

      - run: 
          name: Start Server
          command: go run .
          background: true
      
      - run:
          name: Stop Akita SuperLearn
          command: docker kill --signal=SIGINT akita
